env:
  S3_TEST_BUCKET_NAME: "gt-frontend-9b6q4ua7"
  S3_STAGE_BUCKET_NAME: ""
  S3_PROD_BUCKET_NAME: ""
  DEPLOY_TEST_ROLE_ARN: "arn:aws:iam::576424575048:role/DevOpsDeployRole"
  DEPLOY_STAGE_ROLE_ARN: ""
  DEPLOY_PROD_ROLE_ARN: ""

steps:
  - block: ":rocket: Build & Deploy Branch To Test"
    branches: "!master"

  - label: ":package: Test - Build Frontend Platform Project"
    command:
      - "echo 'Running Build & Push for container"
    env:
      AWS_ASSUME_ROLE_ARN: ${DEPLOY_TEST_ROLE_ARN}
    if: "build.branch != 'master'"
    plugins:
      - cultureamp/aws-assume-role
      - seek-oss/docker-ecr-publish#v2.4.0:
          dockerfile: apps/platform/Dockerfile
          build-context: ./apps/platform
          account_id: "576424575048"
          region: "ap-southeast-2"
          ecr-name: gtfrontend
          args: COMMIT_SHA=$BUILDKITE_COMMIT

  - label: ":rocket: Deploy Branch to Test"
    command:
      - "Deploying Branch to ECS..."
      - "./ecs-deploy -c ecs-spot-test -n givetree-frontend -i ${DEPLOY_TEST_ECR}/gtfrontend:$$BUILDKITE_BUILD_NUMBER -t 600 --enable-rollback"
    if: "build.branch != 'master'"
    env:
      AWS_ASSUME_ROLE_ARN: ${DEPLOY_TEST_ROLE_ARN}
    plugins:
      - cultureamp/aws-assume-role
  
# steps:
#   - label: ":package: Build GiveTree Frontend Project"
#     command:
#       - "apt update"
#       - "apt install -y git"
#       - "yarn add -W sharp"
#       - "yarn install"
#       - "cd apps/platform"
#       - "yarn export"
#     plugins:
#       - docker#v4.0.0:
#           image: "node:18.9-slim"
#           always-pull: false
#     artifact_paths: "apps/platform/out/**"
  
#   - wait  
  
#   - label: ":rocket: Deploy Feature"
#     command:
#       - "cd apps/platform/out"
#       - "ls"
#       - "export BRANCH_SLUG=$(echo '$BUILDKITE_BRANCH' | iconv -c -t ascii//TRANSLIT | sed -E 's/[~^]+//g' | sed -E 's/[^a-zA-Z0-9]+/-/g' | sed -E 's/^-+|-+$//g' | tr A-Z a-z)"
#       - "aws s3 sync . s3://${S3_TEST_BUCKET_NAME}/preview/$${BRANCH_SLUG}"
#     if: "build.branch != 'master'"
#     env:
#       AWS_ASSUME_ROLE_ARN: ${DEPLOY_TEST_ROLE_ARN}
#     plugins:
#       - artifacts#v1.5.0:
#           download: "apps/platform/out/**"
#       - cultureamp/aws-assume-role
  
#   - label: ":rocket: Deploy Master to Test"
#     command:
#       - "cd apps/platform/out"
#       - "ls"
#       - "aws s3 sync . s3://${S3_TEST_BUCKET_NAME}/release --delete"
#     if: "build.branch == 'master'"
#     env:
#       AWS_ASSUME_ROLE_ARN: ${DEPLOY_TEST_ROLE_ARN}
#     plugins:
#       - artifacts#v1.5.0:
#           download: "apps/platform/out/**"
#       - cultureamp/aws-assume-role

#   - wait  

#   - block: ":rocket: Deploy To Staging"
#     branches: "master"

#   - label: ":rocket: Deploy Master to Stage"
#     command:
#       - "Deploying to Staging..."
#       # - "cd apps/platform/out"
#       # - "ls"
#       # - "aws s3 sync . s3://${S3_STAGE_BUCKET_NAME}/release --delete"
#     if: "build.branch == 'master'"
#     env:
#       # AWS_ASSUME_ROLE_ARN: ${DEPLOY_STAGE_ROLE_ARN}
#       AWS_ASSUME_ROLE_ARN: ${DEPLOY_TEST_ROLE_ARN}
#     plugins:
#       - artifacts#v1.5.0:
#           download: "apps/platform/out/**"
#       - cultureamp/aws-assume-role
  
#   - wait  

#   - block: ":rocket: Deploy To Production"
#     branches: "master"

#   - label: ":rocket: Deploy Master to Production"
#     command:
#       - "Deploying to Production..."
#       # - "cd apps/platform/out"
#       # - "ls"
#       # - "aws s3 sync . s3://${S3_PROD_BUCKET_NAME}/release --delete"
#     if: "build.branch == 'master'"
#     env:
#       # AWS_ASSUME_ROLE_ARN: ${DEPLOY_PROD_ROLE_ARN}
#       AWS_ASSUME_ROLE_ARN: ${DEPLOY_TEST_ROLE_ARN}
#     plugins:
#       - artifacts#v1.5.0:
#           download: "apps/platform/out/**"
#       - cultureamp/aws-assume-role
  